plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = c("Sox11", "Atf3"),
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = pal_1,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Sox11",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
gpcrs$Sox11
grid::grid.newpage()
grid::grid.draw(sox11$Sox11)
grid::grid.draw(gpcrs$Sox11)
gpcrGeneSymbols = c("Omg", "Chrm3", "Gpr149", "Gpt19")
ggsave("saving.pdf", gpcrs$Sox11)
magma_pal <- c("Saline_Veh"="#4B2991", "CFA_Veh"="#ED5983", "CFA_ApAP"="#F89078", "CFA_3DDA"="#F1C18E")
ggsave("saving.pdf", gpcrs$Sox11+ theme(aspect.ratio=3))
grid::grid.newpage()
grid::grid.draw(gpcrs$Sox11) + theme(aspect.ratio=3)
ggsave("saving.pdf")
ggsave("saving.pdf", gpcrs$Sox11)
p <- (gpcrs$Sox11) + theme(aspect.ratio=3)
ggsave("saving.pdf", p)
pdf("saving.pdf", 5,8)
pdf("plot.pdf", 5,8)
plot
dev.off()
grid::grid.arrange(gpcrs$Sox11,heights=c(2), widths=c(5))
grid.arrange(gpcrs$Sox11,heights=c(2), widths=c(5))
grid::grid.newpage()
grid.arrange(gpcrs$Sox11,heights=c(2), widths=c(5))
grid.arrange(gpcrs$Sox11,heights=c(2), widths=c(10))
grid::grid.newpage()
grid.arrange(gpcrs$Sox11,heights=c(2), widths=c(10))
ggsave("saving.pdf")
ggsave("saving.pdf")
ggsave("saving.pdf")
ggsave("saving.pdf")
ggsave("saving.pdf")
ggsave("saving.pdf")
resize.win <- function(Width=6, Height=6)
{
# works for windows
dev.off(); # dev.new(width=6, height=6)
windows(record=TRUE, width=Width, height=Height)
}
ggsave("saving.pdf")
ggsave("saving.pdf", gpcrs$Sox11)
resize.win(5,5)
{ quartz(width=width, height=height) } }
quartz(width=4, height=6)
quartz(width=6, height=4)
ggsave("saving.pdf", gpcrs$Sox11)
grid::grid.newpage()
grid::grid.draw(gpcrs$Sox11) + theme(aspect.ratio=3)
ggsave("saving.pdf", gpcrs$Sox11)
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gpcrGeneSymbols,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Sox11",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
gpcrs[1]
View(gpcrs)
print(gSymbol)
for (gSymbol in gpcrs) {
print(gSymbol)
}
View(gpcrs)
for (gSymbol in gpcrs$Name) {
print(gSymbol)
}
print(gSymbol)
for (gSymbol in gpcrs) {
print(gSymbol)
}
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(gpcrs$Sox11) + theme(aspect.ratio=3)
ggsave("Omg.pdf", gpcrs$Omg)
grid::grid.newpage()
grid::grid.draw(gpcrs$Omg) + theme(aspect.ratio=3)
ggsave("Omg.pdf", gpcrs$Omg)
grid::grid.newpage()
grid::grid.draw(gpcrs$Chrm3) + theme(aspect.ratio=3)
ggsave("Chrm3.pdf", gpcrs$Chrm3)
View(gSymbol)
View(gpcrs)
grid::grid.newpage()
grid::grid.draw(gpcrs$Gpr149) + theme(aspect.ratio=3)
ggsave("Gpr149.pdf", gpcrs$Gpr149)
grid::grid.newpage()
grid::grid.draw(gpcrs$Gpr149) + theme(aspect.ratio=3)
grid::grid.draw(gpcrs$Gpr149)
ggsave("Gpr149.pdf", gpcrs$Gpr149)
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gpcrGeneSymbols,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gpcrGeneSymbols,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
grid::grid.newpage()
grid::grid.draw(gpcrs$Gpr149)
ggsave("Gpr149.pdf", gpcrs$Gpr149)
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = "Omg",
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Omg",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
grid::grid.newpage()
grid::grid.draw(gpcrs$Omg)
ggsave("Omg.pdf", gpcrs$Omg)
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = "Chrm3",
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Chrm3",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(gpcrs$Chrm3)
ggsave("Chrm3.pdf", gpcrs$Chrm3)
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = "Gpr149",
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Gpr149",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(gpcrs$Gpr149)
ggsave("Gpr149.pdf", gpcrs$Gpr149)
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = "Gpt19",
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Gpt19",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(gpcrs$Gpt19)
ggsave("GGpt19.pdf", gpcrs$Gpt19)
gpcrs$"Gpt19"
gpcrs[1]
gpcrs
gpcrs[-1]
gpcrs["Gpt19"]
gpcrs <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = "Omg",
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = "Omg",
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
gpcrs["Omg"]
ionGeneSymbols = c(
"Scn8a",
"Kcnma1",
"Cacna1a",
"Kcnh5",
"Scn3a",
"Kcng2",
"Ano1",
"Asic2",
"Gabrb3",
"Kcnq2",
"Gabra1",
"Htr3a",
"Gabrg2",
"Cacna1b",
"Trpv2",
"Scn9a",
"Scn1a"
)
gene <- "BLAH"
gene, ".pdf"
paste(gene, ".pdf")
paste(gene,".pdf")
paste(gene,".pdf", ,sep = '')
paste(gene,".pdf",sep = '')
for (gene in ionGeneSymbols){
currGroup <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gene,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gene,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(currGroup[gene])
ggsave(paste(gene,".pdf",sep = ''), currGroup[gene])
}
currGroup$Scn8a
currGroup["Scn8a"]
gene <- "Scn8a"
currGroup[gene]
for (gene in ionGeneSymbols){
currGroup <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gene,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gene,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(currGroup[gene])
ggsave(paste(gene,".pdf",sep = ''), currGroup[gene])
}
grid::grid.newpage()
grid::grid.draw(currGroup[gene])
grid::grid.draw(currGroup[paste(gene)])
grid::grid.draw(currGroup["Scn8a"])
grid::grid.draw(currGroup$Scn8a)
currGroup[gene]
currGroup[[gene]]
grid::grid.draw(currGroup[[gene]])
for (gene in ionGeneSymbols){
currGroup <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gene,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gene,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(currGroup[[gene]])
ggsave(paste(gene,".pdf",sep = ''), currGroup[gene])
}
grid::grid.draw(currGroup[[gene]])
for (gene in ionGeneSymbols){
currGroup <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gene,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gene,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(currGroup[[gene]])
ggsave(paste(gene,".pdf",sep = ''), currGroup[[gene]])
}
scn1a_umap <- plotEmbedding(
ArchRProj = projPAG,
colorBy = "GeneScoreMatrix",
name = "Scn1a", # change this to be a list of genes we want
embedding = "UMAP",
quantCut = c(0.01, 0.95),
imputeWeights = NULL, # if you want imputation weights, replace with: getImputeWeights(projPAG)
pal = paletteContinuous(set="purpleOrange"),
rastr = TRUE
)
scn1a_umap
scn1a_umap
projHeme <- addCoAccessibility(
ArchRProj = projHeme,
reducedDims = "IterativeLSI"
)
projPAG <- addCoAccessibility(
ArchRProj = projPAG,
reducedDims = "IterativeLSI"
)
for (gene in gpcrGeneSymbols){
currGroup <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gene,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gene,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(currGroup[[gene]])
ggsave(paste(gene,".pdf",sep = ''), currGroup[[gene]])
}
for (gene in ionGeneSymbols){
currGroup <- plotBrowserTrack(
ArchRProj = projPAG,
groupBy = "Sample",
plotSummary = c("bulkTrack", "featureTrack", "loopTrack", "geneTrack"),
sizes = c(8, 1.2, 3, 2),
geneSymbol = gene,
upstream = 50000,
downstream = 50000,
loops = getCoAccessibility(projPAG),
pal = magma_pal,
baseSize = 7,
ylim = c(0,1),
scTileSize = 0.5,
scCellsMax = 100,
borderWidth = 0.4,
tickWidth = 0.4,
facetbaseSize = 7,
title = gene,
verbose = TRUE,
logFile = createLogFile("plotBrowserTrack")
)
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
grid::grid.newpage()
grid::grid.draw(currGroup[[gene]])
ggsave(paste(gene,".pdf",sep = ''), currGroup[[gene]])
}
scn1a_umap
scn1a_umap
library(Cairo)
install.packages("Cairo")
saveArchRProject(ArchRProj = projPAG, outputDirectory = "PAG_ATAC_Directory4", load = FALSE)
setwd("~/Documents/PAGAnalgesicATAC")
saveArchRProject(ArchRProj = projPAG, outputDirectory = "PAG_ATAC_Directory4", load = FALSE)
setwd("~/Documents/PAGAnalgesicATAC/UMAPs")
setwd("~/Documents/PAGAnalgesicATAC/Browser\ Tracks")
setwd("~/Documents/PAGAnalgesicATAC/UMAPs")
scn1a_umap <- plotEmbedding(
ArchRProj = projPAG,
colorBy = "GeneScoreMatrix",
name = "Scn1a", # change this to be a list of genes we want
embedding = "UMAP",
quantCut = c(0.01, 0.95),
imputeWeights = NULL, # if you want imputation weights, replace with: getImputeWeights(projPAG)
pal = paletteContinuous(set="purpleOrange"),
rastr = TRUE
)
scn1a_umap
p3 <- plotEmbedding(ArchRProj = projPAG, colorBy = "cellColData", name = "Clusters", embedding = "UMAP")  + theme(plot.margin = margin(0, 0, 5, 5) , labelMeans =FALSE)
p3
